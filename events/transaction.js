const Discord = require('discord.js');
const fs = require('fs')
const { QuickDB } = require("quick.db");
const db = new QuickDB();
const discordTranscripts = require('discord-html-transcripts');
const { Intents, Permission, Args, Add, ButtonBuilder, ActionRowBuilder, EmbedBuilder, ChannelType, PermissionsBitField, ModalBuilder, TextInputBuilder, ButtonStyle, Client, GatewayIntentBits, TextInputStyle, StringSelectMenuBuilder, UserSelectMenuBuilder } = require('discord.js');
const { SPWorlds } = require('spworlds');
const api = new SPWorlds({ id: 'null', token: 'null' })

module.exports = {
  name: 'interactionCreate',
  async execute(interaction, client) {
    const logs = '1088200691346063420'
    if (interaction.commandName === '–ø–µ—Ä–µ–≤–æ–¥') {
        if (!interaction.member.roles.cache.some(r=>["–ì–ª–∞–≤–∞", "–°–æ–≤–ª–∞–¥–µ–ª–µ—Ü", "ADM"].includes(r.name))) return interaction.reply({ content: 'üìõ \`Error! –ö–∞–∂–µ—Ç—Å—è –≤–∞–º –Ω–µ–ª—å–∑—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å —ç—Ç—É –∫–æ–º–∞–Ω–¥—É!\`', ephemeral: true });
        const colvo = interaction.options.getNumber('–∞—Ä');
        const card = interaction.options.getNumber('–∫–∞—Ä—Ç–∞');
        const comment = interaction.options.getString('–∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π')

        try {
            api.createTransaction({
                receiver: `${card}`,
                amount: `${colvo}`,
                comment: `${comment}`
            })
            
            let emb = new EmbedBuilder()
            .setTitle('–ü–µ—Ä–µ–≤–æ–¥ —É—Å–ø–µ—à–Ω–æ –ø—Ä–æ–∏–∑–≤–µ–¥–µ–Ω!')
            .addFields(
                { name: '–ö–∞—Ä—Ç–∞:', value: `\`${card}\`` },
                { name: '–°—É–º–º–∞:', value: `\`${colvo}\` –ê–†` },
                { name: '–ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π:', value: `\`${comment}\`` }
            )
            .setColor('#5CAF4F')

            await interaction.reply({ embeds: [emb], ephemeral: true })

            let emb1 = new EmbedBuilder()
            .setTitle('–ü–µ—Ä–µ–≤–æ–¥')
            .addFields(
                { name: '–ü–µ—Ä–µ–≤–æ–¥ –æ—Ç–ø—Ä–∞–≤–∏–ª:', value: `<@${interaction.user.id}> | \`${interaction.user.username}\`` },
                { name: '–ö–∞—Ä—Ç–∞:', value: `\`${card}\`` },
                { name: '–°—É–º–º–∞:', value: `\`${colvo}\` –ê–†` },
                { name: '–ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π:', value: `\`${comment}\`` }
            )
            .setAuthor({ name: interaction.user.username, iconURL: interaction.user.avatarURL({ size: 2048 }) })
            .setThumbnail(interaction.user.avatarURL({ size: 2048 }))
            .setColor('#5CAF4F')
            .setTimestamp()
            await client.channels.cache.get(logs).send(({ embeds: [emb1] }));
        } catch(err) {
            let emb = new EmbedBuilder()
            .setTitle('–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–µ—Ä–µ–≤–æ–¥–µ')
            .setDescription(`–°–æ–æ–±—â–µ–Ω–∏–µ –æ–± –æ—à–∏–±–∫–µ: \`${err}\``)
            .setColor('#C03A3A')
            .setTimestamp()
            await client.channels.cache.get(logs).send(({ embeds: [emb] }));    
            await interaction.reply({ embeds: [emb], ephemeral: true })
        }
    }
}
}
